<%- include('../partials/header') %>

<main class="w-full px-6 py-6 space-y-6">
  <!-- Header -->
  <div class="flex flex-wrap items-center justify-between gap-4">
    <div>
      <h1 class="text-3xl sm:text-4xl font-bold text-gray-900">Recruiter Performance</h1>
      <p class="text-sm sm:text-lg text-gray-500">
        Analytics for <span class="font-semibold text-blue-600"><%= recruiter && recruiter.username ? recruiter.username : 'â€”' %></span>
      </p>
    </div>
    <a href="/admin/dashboard" class="bg-gray-100 hover:bg-gray-200 text-gray-800 px-3 sm:px-4 py-2 rounded-lg flex items-center gap-2 shadow-sm transition-transform transform hover:-translate-y-0.5">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"/>
      </svg>
      Back to Dashboard
    </a>
  </div>

  <!-- Filters -->
  <div class="bg-white shadow-md rounded-xl p-4 sm:p-5 flex flex-wrap items-end gap-4 border border-gray-100">
    <div class="w-40 sm:w-52">
      <label class="text-sm font-medium text-gray-600">Start Date</label>
      <input id="startDate" type="date" class="mt-1 block w-full border border-gray-300 rounded-md px-2 py-2" value="<%= defaultStart || '' %>">
    </div>
    <div class="w-40 sm:w-52">
      <label class="text-sm font-medium text-gray-600">End Date</label>
      <input id="endDate" type="date" class="mt-1 block w-full border border-gray-300 rounded-md px-2 py-2" value="<%= defaultEnd || '' %>">
    </div>
    <div class="w-40 sm:w-52">
      <label class="text-sm font-medium text-gray-600">Client</label>
      <select id="clientSelect" class="mt-1 block w-full border border-gray-300 rounded-md px-2 py-2">
        <option value="">All Clients</option>
        <% (allClients || []).forEach(c => { %>
          <option value="<%= c %>"><%= c %></option>
        <% }) %>
      </select>
    </div>
    <div class="ml-auto flex gap-2 pt-4">
      <button id="btnLoad" class="bg-blue-600 hover:bg-blue-700 text-white font-medium px-4 py-2 rounded-lg shadow-sm transition transform hover:-translate-y-0.5">Load Data</button>
      <button id="btnToday" class="bg-gray-200 hover:bg-gray-300 text-gray-700 px-4 py-2 rounded-lg transition">Today</button>
    </div>
  </div>

  <!-- KPI Cards (full width) -->
  <div class="w-full grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-4">
    <% const kpis = [
      { id: 'totalCalls', label: 'Total Calls', color: 'text-blue-700', bg: 'bg-blue-50' },
      { id: 'selectedCount', label: 'Selected', color: 'text-teal-600', bg: 'bg-teal-50' },
      { id: 'offersMade', label: 'Offers Made', color: 'text-green-600', bg: 'bg-green-50' },
      { id: 'dropouts', label: 'Dropouts', color: 'text-red-600', bg: 'bg-red-50' },
      { id: 'conversionRate', label: 'Conversion %', color: 'text-indigo-600', bg: 'bg-indigo-50' }
    ]; %>

    <% kpis.forEach(kpi => { %>
      <div class="kpi-card rounded-xl shadow-sm p-4 text-center border border-gray-100 <%= kpi.bg %>">
        <p class="text-gray-500 text-sm"><%= kpi.label %></p>
        <p id="<%= kpi.id %>" class="text-2xl sm:text-3xl font-bold <%= kpi.color %> mt-1">0</p>
      </div>
    <% }) %>
  </div>

  <!-- ===== Charts Row: three separate sibling divs that fully use horizontal space ===== -->
  <div class="w-full">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Pie -->
      <div class="bg-white p-5 rounded-xl shadow border border-gray-100 chart-card animate-slide-up">
        <h3 class="text-lg font-semibold mb-3 text-gray-700">Selection Breakdown</h3>
        <div class="chart-fill">
          <canvas id="pieChart"></canvas>
        </div>
      </div>

      <!-- Bar -->
      <div class="bg-white p-5 rounded-xl shadow border border-gray-100 chart-card animate-slide-up">
        <h3 class="text-lg font-semibold mb-3 text-gray-700">Client-wise Calls</h3>
        <div class="chart-fill">
          <canvas id="barChart"></canvas>
        </div>
      </div>

      <!-- Line -->
      <div class="bg-white p-5 rounded-xl shadow border border-gray-100 chart-card animate-slide-up">
        <h3 class="text-lg font-semibold mb-3 text-gray-700">Daily Performance Trend</h3>
        <div class="chart-fill">
          <canvas id="lineChart"></canvas>
        </div>
      </div>
    </div>
  </div>

  <!-- Status / loader (full width) -->
  <div id="statusArea" class="w-full"></div>

  <!-- Daily Breakdown Table (full width) -->
  <div class="w-full bg-white p-5 rounded-xl shadow border border-gray-100">
    <h3 class="text-lg font-semibold mb-4 text-gray-700">Daily Breakdown</h3>
    <div class="overflow-x-auto">
      <table class="min-w-full text-sm">
        <thead class="bg-gray-50 text-gray-500 uppercase tracking-wider">
          <tr>
            <th class="py-3 px-4 text-left">Date</th>
            <th class="py-3 px-4 text-left">Total Calls</th>
            <th class="py-3 px-4 text-left">Total Selected</th>
            <th class="py-3 px-4 text-left">Client-wise Selected</th>
          </tr>
        </thead>
        <tbody id="byDayBody" class="text-gray-700 divide-y divide-gray-200">
          <tr><td colspan="4" class="text-center py-8 text-gray-400">Loading data...</td></tr>
        </tbody>
      </table>
    </div>
  </div>
</main>

<%- include('../partials/footer') %>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>

<style>
  /* KPI cards */
  .kpi-card { min-height: 5.5rem; display:flex; align-items:center; justify-content:center; flex-direction:column; transition: transform .18s ease, box-shadow .18s ease; }
  .kpi-card:hover { transform: translateY(-6px); box-shadow: 0 10px 20px rgba(0,0,0,0.06); }

  /* chart card base */
  .chart-card { display:flex; flex-direction:column; gap:.6rem; }
  /* chart-fill will force all cards to be the same height */
  .chart-fill { flex:1 1 0; position:relative; min-height:320px; height:100%; }

  /* canvases fill parent container (Chart.js will scale) */
  canvas { width:100% !important; height:100% !important; display:block; }

  /* subtle animations */
  @keyframes slideUp { from { opacity: 0; transform: translateY(8px); } to { opacity: 1; transform: translateY(0); } }
  .animate-slide-up { animation: slideUp .36s ease both; }

  /* status messages */
  .status-loading { padding: .75rem 1rem; border-radius:.5rem; background:#f8fafc; color:#374151; border:1px solid #e5e7eb; display:flex; gap:.5rem; align-items:center; margin-top:.5rem; }
  .status-error { padding: .75rem 1rem; border-radius:.5rem; background:#fff1f2; color:#991b1b; border:1px solid #fecaca; display:flex; gap:.5rem; align-items:center; margin-top:.5rem; }

  /* smaller screens adjustments */
  @media (max-width: 1024px) {
    .chart-fill { min-height: 280px; }
  }
  @media (max-width: 640px) {
    .kpi-card { min-height: 4.5rem; }
    .chart-fill { min-height: 240px; }
  }
</style>

<script>
(async function(){
  // elements
  const startDateEl = document.getElementById('startDate');
  const endDateEl = document.getElementById('endDate');
  const clientSelectEl = document.getElementById('clientSelect');
  const btnLoad = document.getElementById('btnLoad');
  const btnToday = document.getElementById('btnToday');
  const statusArea = document.getElementById('statusArea');
  const byDayBody = document.getElementById('byDayBody');

  const recruiterId = '<%= recruiter && recruiter._id ? recruiter._id : "" %>';
  if (!recruiterId) {
    statusArea.innerHTML = '<div class="status-error">Missing recruiter ID in view. Ensure <code>recruiter._id</code> is passed.</div>';
    console.error('Missing recruiter._id');
    return;
  }

  function showLoading(msg='Loading data...') {
    statusArea.innerHTML = `<div class="status-loading"><svg class="animate-spin h-5 w-5" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" stroke-opacity="0.15" fill="none"/><path d="M4 12a8 8 0 018-8" stroke="currentColor" stroke-width="4" stroke-linecap="round" fill="none"/></svg><div>${msg}</div></div>`;
  }
  function showError(msg='Something went wrong') {
    statusArea.innerHTML = `<div class="status-error"><svg class="h-5 w-5" viewBox="0 0 24 24" fill="currentColor"><path d="M11 15h2v2h-2zM11 7h2v6h-2z"/><path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"/></svg><div>${msg}</div></div>`;
  }
  function clearStatus(){ statusArea.innerHTML = ''; }

  // chart contexts
  const pieCtx = document.getElementById('pieChart').getContext('2d');
  const barCtx = document.getElementById('barChart').getContext('2d');
  const lineCtx = document.getElementById('lineChart').getContext('2d');

  // common chart options
  const commonOpts = {
    maintainAspectRatio: false,
    responsive: true,
    plugins: { legend: { labels: { usePointStyle: true } } }
  };

  // create charts
  const pieChart = new Chart(pieCtx, {
    type: 'pie',
    data: {
      labels: ['Selected', 'Offers Made', 'Dropouts'],
      datasets: [{ data: [0,0,0], backgroundColor: ['#10b981','#3b82f6','#ef4444'], borderWidth: 1 }]
    },
    options: Object.assign({}, commonOpts, { plugins: { legend: { position: 'bottom' } } })
  });

  const barChart = new Chart(barCtx, {
    type: 'bar',
    data: { labels: [], datasets: [{ label: 'Calls', data: [], backgroundColor: '#3b82f6', borderRadius: 6 }] },
    options: Object.assign({}, commonOpts, {
      plugins: { legend: { display: false } },
      scales: {
        x: { grid: { color: '#f3f4f6' }, title: { display: true, text: 'Client' } },
        y: { beginAtZero: true, grid: { color: '#f3f4f6' }, title: { display: true, text: 'Calls' } }
      }
    })
  });

  const lineChart = new Chart(lineCtx, {
    type: 'line',
    data: { labels: [], datasets: [
      { label: 'Calls', data: [], borderColor: '#3b82f6', backgroundColor: 'rgba(59,130,246,0.08)', tension: 0.25, fill: true, pointRadius: 3 },
      { label: 'Selected', data: [], borderColor: '#10b981', backgroundColor: 'rgba(16,185,129,0.06)', tension: 0.25, fill: true, pointRadius: 3 }
    ]},
    options: Object.assign({}, commonOpts, {
      plugins: { legend: { position: 'top' } },
      scales: {
        x: { type: 'time', time: { unit: 'day', tooltipFormat: 'PP' }, grid: { color: '#f3f4f6' } },
        y: { beginAtZero: true, grid: { color: '#f3f4f6' } }
      }
    })
  });

  // robust fetch for JSON with credentials (cookies)
  async function robustFetchJson(url, opts = {}) {
    const res = await fetch(url, Object.assign({ credentials: 'same-origin' }, opts));
    const contentType = res.headers.get('content-type') || '';
    if (!res.ok) {
      const text = await res.text().catch(()=>null);
      throw new Error(`HTTP ${res.status} ${res.statusText} â€” ${text ? text.slice(0,300) : 'no body'}`);
    }
    if (contentType.includes('application/json')) return res.json();
    const text = await res.text().catch(()=>null);
    throw new Error(`Expected JSON but got ${contentType}. Response start: ${text ? text.slice(0,400) : 'no body'}`);
  }

  async function loadData() {
    showLoading();
    try {
      const startDate = startDateEl.value;
      const endDate = endDateEl.value;
      const client = clientSelectEl.value;

      const params = new URLSearchParams();
      if (startDate) params.append('startDate', startDate);
      if (endDate) params.append('endDate', endDate);
      if (client) params.append('client', client);

      const url = `/admin/dashboard/recruiter/${encodeURIComponent(recruiterId)}/data?${params.toString()}`;
      console.debug('Fetching recruiter data:', url);

      const json = await robustFetchJson(url);
      if (!json.ok) throw new Error(json.message || 'Server returned ok=false');

      updateUI(json);
      clearStatus();
    } catch (err) {
      console.error('Error loading recruiter analytics:', err);
      showError('Failed to load data â€” check console/network for details.');
      byDayBody.innerHTML = '<tr><td colspan="4" class="text-center py-8 text-gray-400">Error loading data. See console.</td></tr>';
    }
  }

  function updateUI(data) {
    // KPIs
    document.getElementById('totalCalls').textContent = data.totalCalls || 0;
    document.getElementById('selectedCount').textContent = data.selectedCount || 0;
    document.getElementById('offersMade').textContent = data.offersMade || 0;
    document.getElementById('dropouts').textContent = data.dropouts || 0;
    document.getElementById('conversionRate').textContent = (data.conversionRate || 0) + '%';

    // Pie
    pieChart.data.datasets[0].data = [
      data.selectedCount || 0,
      data.offersMade || 0,
      data.dropouts || 0
    ];
    pieChart.update();

    // Bar (client-wise)
    const clientCalls = data.clientCalls || [];
    barChart.data.labels = clientCalls.map(c => c._id || 'Unknown');
    barChart.data.datasets[0].data = clientCalls.map(c => c.calls || 0);
    barChart.update();

    // Line (daily)
    const byDay = data.byDay || [];
    lineChart.data.labels = byDay.map(d => d._id);
    lineChart.data.datasets[0].data = byDay.map(d => ({ x: d._id, y: d.calls || 0 }));
    lineChart.data.datasets[1].data = byDay.map(d => ({ x: d._id, y: d.selected || 0 }));
    lineChart.update();

    // Table
    byDayBody.innerHTML = '';
    if (!byDay.length) {
      byDayBody.innerHTML = '<tr><td colspan="4" class="text-center py-8 text-gray-400">No data available</td></tr>';
      return;
    }
    byDay.forEach(row => {
      const clientList = Object.entries(row.clients || {})
        .filter(([client, selected]) => selected > 0)
        .map(([client, selected]) => `<span class="bg-gray-100 text-gray-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded">${escapeHtml(client || 'N/A')}: ${selected}</span>`)
        .join(' ');

      byDayBody.innerHTML += `
        <tr class="hover:bg-gray-50">
          <td class="py-3 px-4">${new Date(row._id).toLocaleDateString('en-CA')}</td>
          <td class="py-3 px-4 font-medium">${row.calls || 0}</td>
          <td class="py-3 px-4 font-medium text-green-600">${row.selected || 0}</td>
          <td class="py-3 px-4">${clientList || '<span class="text-gray-400">None</span>'}</td>
        </tr>
      `;
    });
  }

  function escapeHtml(str) {
    return (''+str).replace(/[&<>"'`=\/]/g, s => ({
      '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;'
    })[s]);
  }

  // events
  btnLoad.addEventListener('click', loadData);
  btnToday.addEventListener('click', () => {
    const iso = new Date().toISOString().slice(0,10);
    startDateEl.value = iso;
    endDateEl.value = iso;
    clientSelectEl.value = '';
    loadData();
  });

  // initial load
  await loadData();

  // resize handling (debounced)
  let t;
  window.addEventListener('resize', ()=> {
    clearTimeout(t);
    t = setTimeout(()=> { pieChart.resize(); barChart.resize(); lineChart.resize(); }, 120);
  });
})();
</script>
