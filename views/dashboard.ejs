<%- include('partials/header') %>

<main class="min-h-screen bg-gray-50 dark:bg-gray-900 py-8 px-4">
  <style>
    .typing-caret {
      display: inline-block;
      width: 2px;
      background: currentColor;
      margin-left: 6px;
      animation: blink 1s step-end infinite;
      vertical-align: middle;
      height: 1.1em;
    }
    @keyframes blink {
      50% { opacity: 0; }
    }
    @keyframes fadeUp {
      from { opacity: 0; transform: translateY(8px); }
      to   { opacity: 1; transform: translateY(0); }
    }
    .js-fade-up {
      animation: fadeUp 420ms ease-out forwards;
    }
    .focus-ring:focus {
      outline: 3px solid rgba(59,130,246,0.25);
      outline-offset: 2px;
    }
  </style>

  <% 
    const displayName = (user && (user.fullName || user.username)) ? (user.fullName || user.username) : 'User';
    const roleDisplay = (user && user.role) ? (user.role.charAt(0).toUpperCase() + user.role.slice(1)) : 'N/A';

    const baseCards = [
      { id: 'candidates', title: 'Candidates', href: '/candidates', icon: 'fa-solid fa-people-group', accent: 'text-gray-800 dark:text-gray-100' },
      { id: 'addCandidate', title: 'Add Candidate', href: '/candidates/new', icon: 'fa-solid fa-user-plus', accent: 'text-green-800 dark:text-green-200' },
      { id: 'reports', title: 'Reports', href: '/admin/dashboard', icon: 'fa-solid fa-chart-line', accent: 'text-indigo-800 dark:text-indigo-200' },
      { id: 'profile', title: 'Profile', href: '/profile', icon: 'fa-solid fa-user', accent: 'text-yellow-800 dark:text-yellow-200' },
    ];

    if (user && user.role && user.role !== 'recruiter') {
      baseCards.push({ id: 'recruiters', title: 'Recruiters', href: '/admin/recruiters', icon: 'fa-solid fa-users', accent: 'text-purple-800 dark:text-purple-200' });
      baseCards.push({ id: 'addRecruiter', title: 'Add Recruiter', href: '/admin/recruiters/new', icon: 'fa-solid fa-user-plus', accent: 'text-pink-800 dark:text-pink-200' });
    } else if (user && user.role === 'recruiter') {
      baseCards.push({ id: 'myStats', title: 'My Stats', href: '/recruiter/dashboard', icon: 'fa-solid fa-chart-simple', accent: 'text-blue-800 dark:text-blue-200' });
    }

    const uniqueCardsMap = {};
    const cards = [];
    baseCards.forEach(c => { if(!uniqueCardsMap[c.id]) { uniqueCardsMap[c.id] = true; cards.push(c); } });
  %>

  <!-- Top: large typed user name & role badge -->
  <section class="max-w-6xl mx-auto mb-8">
    <p class="text-sm text-gray-600 dark:text-gray-300 ml-2">Welcome back</p>
    <div class="w-full flex flex-col items-start gap-4">
      <!-- One-time typing effect -->
      <div 
        x-data='{
          name: <%- JSON.stringify(displayName) %>,
          text: "",
          idx: 0,
          typingSpeed: 110,
          typingDone: false,
          init() {
            const step = () => {
              if (this.idx < this.name.length) {
                this.text += this.name[this.idx++];
                setTimeout(step, this.typingSpeed);
              } else {
                this.typingDone = true;
              }
            };
            step();
          }
        }'
        x-init="init()"
        class="w-full"
      >
        <h1 class="text-4xl sm:text-7xl md:text-5xl font-extrabold leading-tight text-gray-900 dark:text-white tracking-tight">
          <span x-text="text"></span>
          <template x-if="!typingDone">
            <span class="typing-caret" aria-hidden="true"></span>
          </template>
        </h1>

        <div class="mt-3 flex items-center gap-3">
          <span class="inline-flex items-center px-3 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-sm font-medium text-gray-700 dark:text-gray-200 shadow-sm">
            <svg class="w-4 h-4 mr-2 text-gray-500 dark:text-gray-300" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
              <path d="M12 4a4 4 0 100 8 4 4 0 000-8z"></path>
              <path d="M6 20a6 6 0 0112 0"></path>
            </svg>
            <span>Role : <%= roleDisplay %></span>
          </span>
        </div>
      </div>
    </div>
  </section>

  <!-- Small cards grid -->
  <section class="max-w-6xl mx-auto">
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
      <% cards.forEach((card, idx) => { %>
        <a href="<%= card.href %>"
           class="transform-gpu will-change-transform bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-5 flex flex-col items-start gap-3 hover:-translate-y-1 hover:shadow-2xl transition-transform duration-300 ease-out focus-ring focus:outline-none"
           style="animation: fadeUp 480ms ease-out both; animation-delay: <%= (idx * 70) %>ms;"
           role="link" aria-label="<%= card.title %>">
          <div class="flex items-center justify-between w-full">
            <div class="flex items-center gap-4">
              <div class="w-12 h-12 rounded-xl flex items-center justify-center bg-white/60 dark:bg-white/5 shadow-sm">
                <i class="<%= card.icon %> text-2xl <%= card.accent %>"></i>
              </div>
              <div class="flex flex-col">
                <span class="text-sm font-semibold <%= card.accent %>"><%= card.title %></span>
                <span class="text-xs text-gray-500 dark:text-gray-400">Quick access</span>
              </div>
            </div>
            <div class="text-xs text-gray-400">
              <i class="fa-solid fa-arrow-right"></i>
            </div>
          </div>
          <div class="w-full mt-3 flex items-center justify-between">
            <div class="text-xs text-gray-500 dark:text-gray-400"></div>
            <div class="inline-flex items-center gap-2">
              <span class="px-3 py-1 rounded-md text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200">Go</span>
            </div>
          </div>
        </a>
      <% }) %>
    </div>
  </section>
</main>

<%- include('partials/footer') %>
